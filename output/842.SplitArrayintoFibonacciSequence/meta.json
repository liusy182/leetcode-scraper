{
  "id": "842",
  "title": "Split Array into Fibonacci Sequence",
  "slug": "split-array-into-fibonacci-sequence",
  "difficulty": "Medium",
  "likes": 296,
  "dislikes": 101,
  "hints": [],
  "isPaidOnly": false,
  "similarQuestions": "[{\"title\": \"Additive Number\", \"titleSlug\": \"additive-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Fibonacci Number\", \"titleSlug\": \"fibonacci-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
  "solution": {
    "id": "475",
    "canSeeDetail": true,
    "__typename": "ArticleNode",
    "2PpFDrmP": [
      {
        "code": "class Solution {\n    public List<Integer> splitIntoFibonacci(String S) {\n        int N = S.length();\n        for (int i = 0; i < Math.min(10, N); ++i) {\n            if (S.charAt(0) == '0' && i > 0) break;\n            long a = Long.valueOf(S.substring(0, i+1));\n            if (a >= Integer.MAX_VALUE) break;\n\n            search: for (int j = i+1; j < Math.min(i+10, N); ++j) {\n                if (S.charAt(i+1) == '0' && j > i+1) break;\n                long b = Long.valueOf(S.substring(i+1, j+1));\n                if (b >= Integer.MAX_VALUE) break;\n\n                List<Integer> fib = new ArrayList();\n                fib.add((int) a);\n                fib.add((int) b);\n\n                int k = j + 1;\n                while (k < N) {\n                    long nxt = fib.get(fib.size() - 2) + fib.get(fib.size() - 1);\n                    String nxtS = String.valueOf(nxt);\n\n                    if (nxt <= Integer.MAX_VALUE && S.substring(k).startsWith(nxtS)) {\n                        k += nxtS.length();\n                        fib.add((int) nxt);\n                    }\n                    else continue search;\n                }\n                if (fib.size() >= 3) return fib;\n            }\n        }\n\n        return new ArrayList<Integer>();\n    }\n}",
        "langSlug": "java"
      },
      {
        "code": "class Solution(object):\n    def splitIntoFibonacci(self, S):\n        for i in xrange(min(10, len(S))):\n            x = S[:i+1]\n            if x != '0' and x.startswith('0'): break\n            a = int(x)\n            for j in xrange(i+1, min(i+10, len(S))):\n                y = S[i+1: j+1]\n                if y != '0' and y.startswith('0'): break\n                b = int(y)\n                fib = [a, b]\n                k = j + 1\n                while k < len(S):\n                    nxt = fib[-1] + fib[-2]\n                    nxtS = str(nxt)\n                    if nxt <= 2**31 - 1 and S[k:].startswith(nxtS):\n                        k += len(nxtS)\n                        fib.append(nxt)\n                    else:\n                        break\n                else:\n                    if len(fib) >= 3:\n                        return fib\n        return []",
        "langSlug": "python"
      }
    ]
  },
  "topicTags": [
    "String",
    "Backtracking",
    "Greedy"
  ]
}