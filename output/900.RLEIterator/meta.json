{
  "id": "900",
  "title": "RLE Iterator",
  "slug": "rle-iterator",
  "difficulty": "Medium",
  "likes": 146,
  "dislikes": 61,
  "hints": [],
  "isPaidOnly": false,
  "similarQuestions": "[]",
  "solution": {
    "id": "552",
    "canSeeDetail": true,
    "__typename": "ArticleNode",
    "YThfYaPX": [
      {
        "code": "class RLEIterator {\n    int[] A;\n    int i, q;\n\n    public RLEIterator(int[] A) {\n        this.A = A;\n        i = q = 0;\n    }\n\n    public int next(int n) {\n        while (i < A.length) {\n            if (q + n > A[i]) {\n                n -= A[i] - q;\n                q = 0;\n                i += 2;\n            } else {\n                q += n;\n                return A[i+1];\n            }\n        }\n\n        return -1;\n    }\n}\n",
        "langSlug": "java"
      },
      {
        "code": "class RLEIterator(object):\n\n    def __init__(self, A):\n        self.A = A\n        self.i = 0\n        self.q = 0\n\n    def next(self, n):\n        while self.i < len(self.A):\n            if self.q + n > self.A[self.i]:\n                n -= self.A[self.i] - self.q\n                self.q = 0\n                self.i += 2\n            else:\n                self.q += n\n                return self.A[self.i+1]\n        return -1",
        "langSlug": "python"
      }
    ]
  },
  "topicTags": [
    "Array"
  ]
}