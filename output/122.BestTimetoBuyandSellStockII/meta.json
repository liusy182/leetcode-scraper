{
  "id": "122",
  "title": "Best Time to Buy and Sell Stock II",
  "slug": "best-time-to-buy-and-sell-stock-ii",
  "difficulty": "Easy",
  "likes": 1223,
  "dislikes": 1403,
  "hints": [],
  "isPaidOnly": false,
  "similarQuestions": "[{\"title\": \"Best Time to Buy and Sell Stock\", \"titleSlug\": \"best-time-to-buy-and-sell-stock\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock III\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock IV\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock with Cooldown\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-with-cooldown\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock with Transaction Fee\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-with-transaction-fee\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
  "solution": {
    "id": "53",
    "canSeeDetail": true,
    "__typename": "ArticleNode",
    "DQfAGPiL": [
      {
        "code": "class Solution {\n    public int maxProfit(int[] prices) {\n        return calculate(prices, 0);\n    }\n\n    public int calculate(int prices[], int s) {\n        if (s >= prices.length)\n            return 0;\n        int max = 0;\n        for (int start = s; start < prices.length; start++) {\n            int maxprofit = 0;\n            for (int i = start + 1; i < prices.length; i++) {\n                if (prices[start] < prices[i]) {\n                    int profit = calculate(prices, i + 1) + prices[i] - prices[start];\n                    if (profit > maxprofit)\n                        maxprofit = profit;\n                }\n            }\n            if (maxprofit > max)\n                max = maxprofit;\n        }\n        return max;\n    }\n}",
        "langSlug": "java"
      }
    ],
    "Yrs8F9na": [
      {
        "code": "class Solution {\n    public int maxProfit(int[] prices) {\n        int i = 0;\n        int valley = prices[0];\n        int peak = prices[0];\n        int maxprofit = 0;\n        while (i < prices.length - 1) {\n            while (i < prices.length - 1 && prices[i] >= prices[i + 1])\n                i++;\n            valley = prices[i];\n            while (i < prices.length - 1 && prices[i] <= prices[i + 1])\n                i++;\n            peak = prices[i];\n            maxprofit += peak - valley;\n        }\n        return maxprofit;\n    }\n}",
        "langSlug": "java"
      }
    ],
    "ppWUGTaj": [
      {
        "code": "class Solution {\n    public int maxProfit(int[] prices) {\n        int maxprofit = 0;\n        for (int i = 1; i < prices.length; i++) {\n            if (prices[i] > prices[i - 1])\n                maxprofit += prices[i] - prices[i - 1];\n        }\n        return maxprofit;\n    }\n}",
        "langSlug": "java"
      }
    ]
  },
  "topicTags": [
    "Array",
    "Greedy"
  ]
}