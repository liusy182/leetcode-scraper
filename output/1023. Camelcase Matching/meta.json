{
  "id": "1023",
  "title": "Camelcase Matching",
  "slug": "camelcase-matching",
  "difficulty": "Medium",
  "likes": 87,
  "dislikes": 83,
  "hints": [
    "Given a single pattern and word, how can we solve it?",
    "One way to do it is using a DP (pos1, pos2) where pos1 is a pointer to the word and pos2 to the pattern and returns true if we can match the pattern with the given word.",
    "We have two scenarios: The first one is when `word[pos1] == pattern[pos2]`, then the transition will be just DP(pos1 + 1, pos2 + 1). The second scenario is when `word[pos1]` is lowercase then we can add this character to the pattern so that the transition is just DP(pos1 + 1, pos2)\r\nThe case base is `if (pos1 == n && pos2 == m) return true;` Where n and m are the sizes of the strings word and pattern respectively."
  ],
  "isPaidOnly": false,
  "similarQuestions": "[]",
  "solution": null,
  "topicTags": [
    "String",
    "Trie"
  ]
}