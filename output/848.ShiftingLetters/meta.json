{
  "id": "848",
  "title": "Shifting Letters",
  "slug": "shifting-letters",
  "difficulty": "Medium",
  "likes": 179,
  "dislikes": 37,
  "hints": [],
  "isPaidOnly": false,
  "similarQuestions": "[]",
  "solution": {
    "id": "482",
    "canSeeDetail": true,
    "__typename": "ArticleNode",
    "eh9zG8Q2": [
      {
        "code": "class Solution {\n    public String shiftingLetters(String S, int[] shifts) {\n        StringBuilder ans = new StringBuilder();\n        int X = 0;\n        for (int shift: shifts)\n            X = (X + shift) % 26;\n\n        for (int i = 0; i < S.length(); ++i) {\n            int index = S.charAt(i) - 'a';\n            ans.append((char) ((index + X) % 26 + 97));\n            X = Math.floorMod(X - shifts[i], 26);\n        }\n\n        return ans.toString();\n    }\n}",
        "langSlug": "java"
      },
      {
        "code": "class Solution(object):\n    def shiftingLetters(self, S, shifts):\n        ans = []\n        X = sum(shifts) % 26\n        for i, c in enumerate(S):\n            index = ord(c) - ord('a')\n            ans.append(chr(ord('a') + (index + X) % 26))\n            X = (X - shifts[i]) % 26\n\n        return \"\".join(ans)",
        "langSlug": "python"
      }
    ]
  },
  "topicTags": [
    "String"
  ]
}