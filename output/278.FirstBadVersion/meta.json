{
  "id": "278",
  "title": "First Bad Version",
  "slug": "first-bad-version",
  "difficulty": "Easy",
  "likes": 742,
  "dislikes": 458,
  "hints": [],
  "isPaidOnly": false,
  "similarQuestions": "[{\"title\": \"Find First and Last Position of Element in Sorted Array\", \"titleSlug\": \"find-first-and-last-position-of-element-in-sorted-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Search Insert Position\", \"titleSlug\": \"search-insert-position\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Guess Number Higher or Lower\", \"titleSlug\": \"guess-number-higher-or-lower\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
  "solution": {
    "id": "8",
    "canSeeDetail": true,
    "__typename": "ArticleNode",
    "Ezb8JYsL": [
      {
        "code": "public int firstBadVersion(int n) {\n    for (int i = 1; i < n; i++) {\n        if (isBadVersion(i)) {\n            return i;\n        }\n    }\n    return n;\n}",
        "langSlug": "java"
      }
    ],
    "VQBrosDg": [
      {
        "code": "public int firstBadVersion(int n) {\n    int left = 1;\n    int right = n;\n    while (left < right) {\n        int mid = left + (right - left) / 2;\n        if (isBadVersion(mid)) {\n            right = mid;\n        } else {\n            left = mid + 1;\n        }\n    }\n    return left;\n}",
        "langSlug": "java"
      }
    ]
  },
  "topicTags": [
    "Binary Search"
  ]
}