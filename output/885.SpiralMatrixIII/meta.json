{
  "id": "885",
  "title": "Spiral Matrix III",
  "slug": "spiral-matrix-iii",
  "difficulty": "Medium",
  "likes": 115,
  "dislikes": 182,
  "hints": [],
  "isPaidOnly": false,
  "similarQuestions": "[]",
  "solution": {
    "id": "531",
    "canSeeDetail": true,
    "__typename": "ArticleNode",
    "XTsQ5Bi8": [
      {
        "code": "class Solution {\n    public int[][] spiralMatrixIII(int R, int C, int r0, int c0) {\n        int[] dr = new int[]{0, 1, 0, -1};\n        int[] dc = new int[]{1, 0, -1, 0};\n\n        int[][] ans = new int[R*C][2];\n        int t = 0;\n\n        ans[t++] = new int[]{r0, c0};\n        if (R * C == 1) return ans;\n\n        for (int k = 1; k < 2*(R+C); k += 2)\n            for (int i = 0; i < 4; ++i) {  // i: direction index\n                int dk = k + (i / 2);  // number of steps in this direction\n                for (int j = 0; j < dk; ++j) {  // for each step in this direction...\n                    // step in the i-th direction\n                    r0 += dr[i];\n                    c0 += dc[i];\n                    if (0 <= r0 && r0 < R && 0 <= c0 && c0 < C) {\n                        ans[t++] = new int[]{r0, c0};\n                        if (t == R * C) return ans;\n                    }\n                }\n            }\n\n        throw null;\n    }\n}",
        "langSlug": "java"
      },
      {
        "code": "class Solution(object):\n    def spiralMatrixIII(self, R, C, r0, c0):\n        ans = [(r0, c0)]\n        if R * C == 1: return ans\n\n        # For walk length k = 1, 3, 5 ...\n        for k in xrange(1, 2*(R+C), 2):\n\n            # For direction (dr, dc) = east, south, west, north;\n            # and walk length dk...\n            for dr, dc, dk in ((0, 1, k), (1, 0, k), (0, -1, k+1), (-1, 0, k+1)):\n\n                # For each of dk units in the current direction ...\n                for _ in xrange(dk):\n\n                    # Step in that direction\n                    r0 += dr\n                    c0 += dc\n\n                    # If on the grid ...\n                    if 0 <= r0 < R and 0 <= c0 < C:\n                        ans.append((r0, c0))\n                        if len(ans) == R * C:\n                            return ans",
        "langSlug": "python"
      }
    ]
  },
  "topicTags": [
    "Math"
  ]
}