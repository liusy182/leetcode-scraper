{
  "id": "409",
  "title": "Longest Palindrome",
  "slug": "longest-palindrome",
  "difficulty": "Easy",
  "likes": 596,
  "dislikes": 64,
  "hints": [],
  "isPaidOnly": false,
  "similarQuestions": "[{\"title\": \"Palindrome Permutation\", \"titleSlug\": \"palindrome-permutation\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
  "solution": {
    "id": "361",
    "canSeeDetail": true,
    "__typename": "ArticleNode",
    "ZnPVAdHR": [
      {
        "code": "class Solution {\n    public int longestPalindrome(String s) {\n        int[] count = new int[128];\n        for (char c: s.toCharArray())\n            count[c]++;\n\n        int ans = 0;\n        for (int v: count) {\n            ans += v / 2 * 2;\n            if (ans % 2 == 0 && v % 2 == 1)\n                ans++;\n        }\n        return ans;\n    }\n}",
        "langSlug": "java"
      },
      {
        "code": "class Solution:\n    def longestPalindrome(self, s):\n        ans = 0\n        for v in collections.Counter(s).itervalues():\n            ans += v / 2 * 2\n            if ans % 2 == 0 and v % 2 == 1:\n                ans += 1\n        return ans",
        "langSlug": "python"
      }
    ]
  },
  "topicTags": [
    "Hash Table"
  ]
}