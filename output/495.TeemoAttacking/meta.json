{
  "id": "495",
  "title": "Teemo Attacking",
  "slug": "teemo-attacking",
  "difficulty": "Medium",
  "likes": 263,
  "dislikes": 562,
  "hints": [],
  "isPaidOnly": false,
  "similarQuestions": "[{\"title\": \"Merge Intervals\", \"titleSlug\": \"merge-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Can Place Flowers\", \"titleSlug\": \"can-place-flowers\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Dota2 Senate\", \"titleSlug\": \"dota2-senate\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
  "solution": {
    "id": "752",
    "canSeeDetail": true,
    "__typename": "ArticleNode",
    "gz6gYdPv": [
      {
        "code": "class Solution {\n  public int findPoisonedDuration(int[] timeSeries, int duration) {\n    int n = timeSeries.length;\n    if (n == 0) return 0;\n\n    int total = 0;\n    for(int i = 0; i < n - 1; ++i)\n      total += Math.min(timeSeries[i + 1] - timeSeries[i], duration);\n    return total + duration;\n  }\n}",
        "langSlug": "java"
      },
      {
        "code": "class Solution:\n    def findPoisonedDuration(self, timeSeries: List[int], duration: int) -> int:\n        n = len(timeSeries)\n        if n == 0:\n            return 0\n        \n        total = 0\n        for i in range(n - 1):\n            total += min(timeSeries[i + 1] - timeSeries[i], duration)\n        return total + duration",
        "langSlug": "python"
      }
    ]
  },
  "topicTags": [
    "Array"
  ]
}