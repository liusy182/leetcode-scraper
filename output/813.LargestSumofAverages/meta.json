{
  "id": "813",
  "title": "Largest Sum of Averages",
  "slug": "largest-sum-of-averages",
  "difficulty": "Medium",
  "likes": 606,
  "dislikes": 22,
  "hints": [],
  "isPaidOnly": false,
  "similarQuestions": "[]",
  "solution": {
    "id": "446",
    "canSeeDetail": true,
    "__typename": "ArticleNode",
    "Eem7Vreg": [
      {
        "code": "class Solution {\n    public double largestSumOfAverages(int[] A, int K) {\n        int N = A.length;\n        double[] P = new double[N+1];\n        for (int i = 0; i < N; ++i)\n            P[i+1] = P[i] + A[i];\n\n        double[] dp = new double[N];\n        for (int i = 0; i < N; ++i)\n            dp[i] = (P[N] - P[i]) / (N - i);\n\n        for (int k = 0; k < K-1; ++k)\n            for (int i = 0; i < N; ++i)\n                for (int j = i+1; j < N; ++j)\n                    dp[i] = Math.max(dp[i], (P[j]-P[i]) / (j-i) + dp[j]);\n\n        return dp[0];\n    }\n}",
        "langSlug": "java"
      },
      {
        "code": "class Solution(object):\n    def largestSumOfAverages(self, A, K):\n        P = [0]\n        for x in A: P.append(P[-1] + x)\n        def average(i, j):\n            return (P[j] - P[i]) / float(j - i)\n\n        N = len(A)\n        dp = [average(i, N) for i in xrange(N)]\n        for k in xrange(K-1):\n            for i in xrange(N):\n                for j in xrange(i+1, N):\n                    dp[i] = max(dp[i], average(i, j) + dp[j])\n\n        return dp[0]",
        "langSlug": "python"
      }
    ]
  },
  "topicTags": [
    "Dynamic Programming"
  ]
}