{
  "id": "19",
  "title": "Remove Nth Node From End of List",
  "slug": "remove-nth-node-from-end-of-list",
  "difficulty": "Medium",
  "likes": 2109,
  "dislikes": 160,
  "hints": [
    "Maintain two pointers and update one with a delay of n steps."
  ],
  "isPaidOnly": false,
  "similarQuestions": "[]",
  "solution": {
    "id": "48",
    "canSeeDetail": true,
    "__typename": "ArticleNode",
    "mjMSbADc": [
      {
        "code": "public ListNode removeNthFromEnd(ListNode head, int n) {\n    ListNode dummy = new ListNode(0);\n    dummy.next = head;\n    int length  = 0;\n    ListNode first = head;\n    while (first != null) {\n        length++;\n        first = first.next;\n    }\n    length -= n;\n    first = dummy;\n    while (length > 0) {\n        length--;\n        first = first.next;\n    }\n    first.next = first.next.next;\n    return dummy.next;\n}",
        "langSlug": "java"
      }
    ],
    "BPxLi8Wz": [
      {
        "code": "public ListNode removeNthFromEnd(ListNode head, int n) {\n    ListNode dummy = new ListNode(0);\n    dummy.next = head;\n    ListNode first = dummy;\n    ListNode second = dummy;\n    // Advances first pointer so that the gap between first and second is n nodes apart\n    for (int i = 1; i <= n + 1; i++) {\n        first = first.next;\n    }\n    // Move first to the end, maintaining the gap\n    while (first != null) {\n        first = first.next;\n        second = second.next;\n    }\n    second.next = second.next.next;\n    return dummy.next;\n}",
        "langSlug": "java"
      }
    ]
  },
  "topicTags": [
    "Linked List",
    "Two Pointers"
  ]
}