{
  "id": "747",
  "title": "Largest Number At Least Twice of Others",
  "slug": "largest-number-at-least-twice-of-others",
  "difficulty": "Easy",
  "likes": 222,
  "dislikes": 446,
  "hints": [
    "Scan through the array to find the unique largest element `m`, keeping track of it's index `maxIndex`.\r\n\r\nScan through the array again.  If we find some `x != m` with `m < 2*x`, we should return `-1`.\r\n\r\nOtherwise, we should return `maxIndex`."
  ],
  "isPaidOnly": false,
  "similarQuestions": "[]",
  "solution": {
    "id": "353",
    "canSeeDetail": true,
    "__typename": "ArticleNode",
    "j3xuZ4yh": [
      {
        "code": "class Solution {\n    public int dominantIndex(int[] nums) {\n        int maxIndex = 0;\n        for (int i = 0; i < nums.length; ++i) {\n            if (nums[i] > nums[maxIndex])\n                maxIndex = i;\n        }\n        for (int i = 0; i < nums.length; ++i) {\n            if (maxIndex != i && nums[maxIndex] < 2 * nums[i])\n                return -1;\n        }\n        return maxIndex;\n    }\n}",
        "langSlug": "java"
      },
      {
        "code": "class Solution(object):\n    def dominantIndex(self, nums):\n        m = max(nums)\n        if all(m >= 2*x for x in nums if x != m):\n            return nums.index(m)\n        return -1",
        "langSlug": "python"
      }
    ]
  },
  "topicTags": [
    "Array"
  ]
}