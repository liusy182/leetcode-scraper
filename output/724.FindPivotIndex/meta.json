{
  "id": "724",
  "title": "Find Pivot Index",
  "slug": "find-pivot-index",
  "difficulty": "Easy",
  "likes": 699,
  "dislikes": 170,
  "hints": [
    "We can precompute prefix sums P[i] = nums[0] + nums[1] + ... + nums[i-1].\r\nThen for each index, the left sum is P[i], and the right sum is P[P.length - 1] - P[i] - nums[i]."
  ],
  "isPaidOnly": false,
  "similarQuestions": "[{\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
  "solution": {
    "id": "291",
    "canSeeDetail": true,
    "__typename": "ArticleNode",
    "332EfbBV": [
      {
        "code": "class Solution {\n    public int pivotIndex(int[] nums) {\n        int sum = 0, leftsum = 0;\n        for (int x: nums) sum += x;\n        for (int i = 0; i < nums.length; ++i) {\n            if (leftsum == sum - leftsum - nums[i]) return i;\n            leftsum += nums[i];\n        }\n        return -1;\n    }\n}",
        "langSlug": "java"
      },
      {
        "code": "class Solution(object):\n    def pivotIndex(self, nums):\n        S = sum(nums)\n        leftsum = 0\n        for i, x in enumerate(nums):\n            if leftsum == (S - leftsum - x):\n                return i\n            leftsum += x\n        return -1",
        "langSlug": "python"
      }
    ]
  },
  "topicTags": [
    "Array"
  ]
}