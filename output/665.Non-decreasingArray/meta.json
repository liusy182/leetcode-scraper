{
  "id": "665",
  "title": "Non-decreasing Array",
  "slug": "non-decreasing-array",
  "difficulty": "Easy",
  "likes": 1208,
  "dislikes": 273,
  "hints": [],
  "isPaidOnly": false,
  "similarQuestions": "[]",
  "solution": {
    "id": "239",
    "canSeeDetail": true,
    "__typename": "ArticleNode",
    "FK7JPfxR": [
      {
        "code": "class Solution(object):\n    def checkPossibility(self, A):\n        def monotone_increasing(arr):\n            for i in range(len(arr) - 1):\n                if arr[i] > arr[i+1]:\n                    return False\n            return True\n\n        new = A[:]\n        for i in xrange(len(A)):\n            old_ai = A[i]\n            new[i] = new[i-1] if i > 0 else float('-inf')\n            if monotone_increasing(new):\n                return True\n            new[i] = old_ai\n\n        return False",
        "langSlug": "python"
      }
    ],
    "4ypTHUiy": [
      {
        "code": "class Solution(object):\n    def checkPossibility(self, A):\n        def brute_force(A):\n            #Same as in approach 1\n\n        i, j = 0, len(A) - 1\n        while i+2 < len(A) and A[i] <= A[i+1] <= A[i+2]:\n            i += 1\n        while j-2 >= 0 and A[j-2] <= A[j-1] <= A[j]:\n            j -= 1\n\n        if j - i + 1 <= 2:\n            return True\n        if j - i + 1 >= 5:\n            return False\n\n        return brute_force(A[i: j+1])",
        "langSlug": "python"
      }
    ],
    "NGHYqESJ": [
      {
        "code": "class Solution(object):\n    def checkPossibility(self, A):\n        p = None\n        for i in xrange(len(A) - 1):\n            if A[i] > A[i+1]:\n                if p is not None:\n                    return False\n                p = i\n\n        return (p is None or p == 0 or p == len(A)-2 or\n                A[p-1] <= A[p+1] or A[p] <= A[p+2])",
        "langSlug": "python"
      }
    ]
  },
  "topicTags": [
    "Array"
  ]
}